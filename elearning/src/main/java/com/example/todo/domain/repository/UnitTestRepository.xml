<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.example.todo.domain.repository.UnitTestRepository">

    <select id="findAll" resultType="com.example.todo.domain.model.UnitTest">
        SELECT
            *
        FROM
            unit_test
        ORDER BY
            user_id ASC,
            ques_num ASC,
            status ASC
    </select>

    <select id="findBySnum" resultType="com.example.todo.domain.model.UnitTest">
        SELECT
            source_id,
            status,
            strsavetime,
            size,
            duration,
            score
        FROM
            unit_test
        WHERE
                user_id = #{userId}
            AND ques_num = #{quesNum}
        ORDER BY
            ques_num ASC,
            status ASC
    </select>

    <update id="create">
        INSERT INTO UNIT_TEST
            (source_id,user_id,ques_num,status,source,savetime,strsavetime,size,duration,score)
        VALUES
            (#{sourceId},#{userId},#{quesNum},0,#{source},#{savetime},#{strsavetime},#{size},#{duration},#{score})
    </update>

    <update id="updateBySnum">
        UPDATE
            unit_test
        SET
            STATUS = 0
        WHERE
                user_id = #{userId}
            AND ques_num = #{quesNum}
    </update>

    <update id="updateAsQues">
        UPDATE
            unit_test
        SET
            score = #{entity.score},
            duration = #{entity.duration},
            status = #{entity.status}
        WHERE
            source_id = #{sourceId}
    </update>

    <select id="nextNum" resultType="_long">
        SELECT nextval('seq_unit_test_${year}')
    </select>

    <select id="findSource" resultType="com.example.todo.domain.model.UnitTest">
        SELECT
            source,
            status,
            size,
            duration,
            score
        FROM
            unit_test
        WHERE
            source_id = #{sourceId}
    </select>

    <select id="findBestByTeam" resultType="com.example.todo.domain.model.UnitTest">
        SELECT
            c.ques_num,
            u.source_id,
            u.user_id,
            COALESCE(u.size,0) as size,
            COALESCE(u.duration,0) as duration,
            u.strsavetime,
            COALESCE(u.status,0) as status,
            COALESCE(u.score,0) as score
        FROM
            (select * from unit_test
                where user_id in (SELECT user_id from user_inf where team_id=#{teamId})) u
        RIGHT OUTER JOIN
            content c
        ON
            u.ques_num = c.ques_num
        WHERE
            u.user_id is null  AND c.scope=#{scope} OR
            (CONCAT(u.ques_num,u.score,u.strsavetime) IN
            (SELECT CONCAT(u.ques_num,MAX(score),MIN(strsavetime)) FROM unit_test u
                RIGHT OUTER JOIN content c ON u.ques_num = c.ques_num
                WHERE u.user_id IN (SELECT user_id from user_inf where team_id=#{teamId})
                    AND c.scope=#{scope}
                GROUP BY u.ques_num)
            )
            ORDER BY ques_num ASC
    </select>
</mapper>