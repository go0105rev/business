--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: elearn_user; Type: SCHEMA; Schema: -; Owner: elearn_user
--

CREATE SCHEMA elearn_user;


ALTER SCHEMA elearn_user OWNER TO elearn_user;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: batch_job_execution; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.batch_job_execution (
    job_execution_id bigint NOT NULL,
    version bigint,
    job_instance_id bigint NOT NULL,
    create_time timestamp(6) without time zone NOT NULL,
    start_time timestamp(6) without time zone DEFAULT NULL::timestamp without time zone,
    end_time timestamp(6) without time zone DEFAULT NULL::timestamp without time zone,
    status character varying(10),
    exit_code character varying(2500),
    exit_message character varying(2500),
    last_updated timestamp(6) without time zone
);


ALTER TABLE elearn_user.batch_job_execution OWNER TO elearn_user;

--
-- Name: batch_job_execution_context; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.batch_job_execution_context (
    job_execution_id bigint NOT NULL,
    short_context character varying(2500) NOT NULL,
    serialized_context text
);


ALTER TABLE elearn_user.batch_job_execution_context OWNER TO elearn_user;

--
-- Name: batch_job_execution_job_execution_id_seq; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE elearn_user.batch_job_execution ALTER COLUMN job_execution_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME elearn_user.batch_job_execution_job_execution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: batch_job_execution_params; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.batch_job_execution_params (
    job_execution_id bigint NOT NULL,
    parameter_name character varying(100) NOT NULL,
    parameter_type character varying(100) NOT NULL,
    parameter_value character varying(2500),
    identifying character(1) NOT NULL
);


ALTER TABLE elearn_user.batch_job_execution_params OWNER TO elearn_user;

--
-- Name: batch_job_execution_seq; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

CREATE SEQUENCE elearn_user.batch_job_execution_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE elearn_user.batch_job_execution_seq OWNER TO elearn_user;

--
-- Name: batch_job_instance; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.batch_job_instance (
    job_instance_id bigint NOT NULL,
    version bigint,
    job_name character varying(100) NOT NULL,
    job_key character varying(32) NOT NULL
);


ALTER TABLE elearn_user.batch_job_instance OWNER TO elearn_user;

--
-- Name: batch_job_instance_job_instance_id_seq; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE elearn_user.batch_job_instance ALTER COLUMN job_instance_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME elearn_user.batch_job_instance_job_instance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: batch_job_seq; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

CREATE SEQUENCE elearn_user.batch_job_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE elearn_user.batch_job_seq OWNER TO elearn_user;

--
-- Name: batch_step_execution; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.batch_step_execution (
    step_execution_id bigint NOT NULL,
    version bigint NOT NULL,
    step_name character varying(100) NOT NULL,
    job_execution_id bigint NOT NULL,
    create_time timestamp(6) without time zone NOT NULL,
    start_time timestamp(6) without time zone DEFAULT NULL::timestamp without time zone,
    end_time timestamp(6) without time zone DEFAULT NULL::timestamp without time zone,
    status character varying(10),
    commit_count bigint,
    read_count bigint,
    filter_count bigint,
    write_count bigint,
    read_skip_count bigint,
    write_skip_count bigint,
    process_skip_count bigint,
    rollback_count bigint,
    exit_code character varying(2500),
    exit_message character varying(2500),
    last_updated timestamp(6) without time zone
);


ALTER TABLE elearn_user.batch_step_execution OWNER TO elearn_user;

--
-- Name: batch_step_execution_context; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.batch_step_execution_context (
    step_execution_id bigint NOT NULL,
    short_context character varying(2500) NOT NULL,
    serialized_context text
);


ALTER TABLE elearn_user.batch_step_execution_context OWNER TO elearn_user;

--
-- Name: batch_step_execution_seq; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

CREATE SEQUENCE elearn_user.batch_step_execution_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE elearn_user.batch_step_execution_seq OWNER TO elearn_user;

--
-- Name: batch_step_execution_step_execution_id_seq; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE elearn_user.batch_step_execution ALTER COLUMN step_execution_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME elearn_user.batch_step_execution_step_execution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: content; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.content (
    ques_num character(7) NOT NULL,
    scope bigint,
    ques bigint,
    ques_name character varying(50) NOT NULL,
    detail text,
    rule text,
    sdate timestamp without time zone,
    acess_flg smallint,
    input1 text,
    input2 text,
    output1 text,
    output2 text,
    input text,
    output text
);


ALTER TABLE elearn_user.content OWNER TO elearn_user;

--
-- Name: lab; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.lab (
    scope integer NOT NULL,
    scope_name text NOT NULL,
    sdate timestamp without time zone,
    acess_flg smallint
);


ALTER TABLE elearn_user.lab OWNER TO elearn_user;

--
-- Name: seq_unit_test_2025; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

CREATE SEQUENCE elearn_user.seq_unit_test_2025
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 99999
    CACHE 1
    CYCLE;


ALTER TABLE elearn_user.seq_unit_test_2025 OWNER TO elearn_user;

--
-- Name: seq_unit_test_2026; Type: SEQUENCE; Schema: elearn_user; Owner: elearn_user
--

CREATE SEQUENCE elearn_user.seq_unit_test_2026
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 99999
    CACHE 1
    CYCLE;


ALTER TABLE elearn_user.seq_unit_test_2026 OWNER TO elearn_user;

--
-- Name: team_inf; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.team_inf (
    team_id character(5) NOT NULL,
    team_name character varying(50) NOT NULL,
    s_date timestamp without time zone,
    e_date timestamp without time zone,
    access character varying
);


ALTER TABLE elearn_user.team_inf OWNER TO elearn_user;

--
-- Name: unit_test; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.unit_test (
    source_id character varying(13) NOT NULL,
    user_id character varying(10) NOT NULL,
    ques_num character(8) NOT NULL,
    status smallint,
    source bytea,
    savetime timestamp without time zone NOT NULL,
    strsavetime character(21) NOT NULL,
    size double precision,
    duration double precision,
    score bigint,
    memory double precision
);


ALTER TABLE elearn_user.unit_test OWNER TO elearn_user;

--
-- Name: user_inf; Type: TABLE; Schema: elearn_user; Owner: elearn_user
--

CREATE TABLE elearn_user.user_inf (
    team_id character(5) NOT NULL,
    user_id character varying(10) NOT NULL,
    password character varying NOT NULL,
    user_name character varying(20) NOT NULL,
    gender smallint NOT NULL,
    age integer,
    exp integer,
    s_date timestamp without time zone NOT NULL,
    e_date timestamp without time zone
);


ALTER TABLE elearn_user.user_inf OWNER TO elearn_user;

--
-- Name: batch_job_execution_context batch_job_execution_context_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_job_execution_context
    ADD CONSTRAINT batch_job_execution_context_pkey PRIMARY KEY (job_execution_id);


--
-- Name: batch_job_execution batch_job_execution_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_job_execution
    ADD CONSTRAINT batch_job_execution_pkey PRIMARY KEY (job_execution_id);


--
-- Name: batch_job_instance batch_job_instance_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_job_instance
    ADD CONSTRAINT batch_job_instance_pkey PRIMARY KEY (job_instance_id);


--
-- Name: batch_step_execution_context batch_step_execution_context_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_step_execution_context
    ADD CONSTRAINT batch_step_execution_context_pkey PRIMARY KEY (step_execution_id);


--
-- Name: batch_step_execution batch_step_execution_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_step_execution
    ADD CONSTRAINT batch_step_execution_pkey PRIMARY KEY (step_execution_id);


--
-- Name: content content_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.content
    ADD CONSTRAINT content_pkey PRIMARY KEY (ques_num);


--
-- Name: batch_job_instance job_inst_un; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_job_instance
    ADD CONSTRAINT job_inst_un UNIQUE (job_name, job_key);


--
-- Name: lab lab_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.lab
    ADD CONSTRAINT lab_pkey PRIMARY KEY (scope);


--
-- Name: team_inf team_inf_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.team_inf
    ADD CONSTRAINT team_inf_pkey PRIMARY KEY (team_id);


--
-- Name: unit_test unit_test_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.unit_test
    ADD CONSTRAINT unit_test_pkey PRIMARY KEY (source_id);


--
-- Name: user_inf user_inf_pkey; Type: CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.user_inf
    ADD CONSTRAINT user_inf_pkey PRIMARY KEY (user_id);


--
-- Name: batch_job_execution_context job_exec_ctx_fk; Type: FK CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_job_execution_context
    ADD CONSTRAINT job_exec_ctx_fk FOREIGN KEY (job_execution_id) REFERENCES elearn_user.batch_job_execution(job_execution_id);


--
-- Name: batch_job_execution_params job_exec_params_fk; Type: FK CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_job_execution_params
    ADD CONSTRAINT job_exec_params_fk FOREIGN KEY (job_execution_id) REFERENCES elearn_user.batch_job_execution(job_execution_id);


--
-- Name: batch_step_execution job_exec_step_fk; Type: FK CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_step_execution
    ADD CONSTRAINT job_exec_step_fk FOREIGN KEY (job_execution_id) REFERENCES elearn_user.batch_job_execution(job_execution_id);


--
-- Name: batch_job_execution job_inst_exec_fk; Type: FK CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_job_execution
    ADD CONSTRAINT job_inst_exec_fk FOREIGN KEY (job_instance_id) REFERENCES elearn_user.batch_job_instance(job_instance_id);


--
-- Name: batch_step_execution_context step_exec_ctx_fk; Type: FK CONSTRAINT; Schema: elearn_user; Owner: elearn_user
--

ALTER TABLE ONLY elearn_user.batch_step_execution_context
    ADD CONSTRAINT step_exec_ctx_fk FOREIGN KEY (step_execution_id) REFERENCES elearn_user.batch_step_execution(step_execution_id);


--
-- Name: FUNCTION pg_ls_dir(text); Type: ACL; Schema: pg_catalog; Owner: postgres
--

GRANT ALL ON FUNCTION pg_catalog.pg_ls_dir(text) TO elearn_user;


--
-- Name: FUNCTION pg_read_binary_file(text); Type: ACL; Schema: pg_catalog; Owner: postgres
--

GRANT ALL ON FUNCTION pg_catalog.pg_read_binary_file(text) TO elearn_user;


--
-- PostgreSQL database dump complete
--

